{"version":3,"sources":["../src/calculator.js"],"names":["calculate","totalWidth","number","considersCrossButton","maxTabWidth","wedgePercentage","tabWidth","Math","min","max","tabWidthFull","wedgeWidth","contentWidth","res","left","i","push","width"],"mappings":";;;;;;;AAAA;;AAMO,IAAMA,gCAAY,SAAZA,SAAY,CAACC,UAAD,EAAaC,MAAb,EAAgG;AAAA,MAA3EC,oBAA2E,uEAApD,IAAoD;AAAA,MAA9CC,WAA8C,uEAAhC,GAAgC;AAAA,MAA3BC,eAA2B,uEAAT,IAAS;;AACvH,MAAIC,WAAWL,cAAcC,SAASG,eAAvB,CAAf;AACAC,aAAWC,KAAKC,GAAL,CAASJ,WAAT,EAAsBE,QAAtB,CAAX;AACA,MAAGH,oBAAH,EAAwB;AACtBG,eAAWC,KAAKE,GAAL,CAASH,QAAT,yBAAX;AACD;AACD,MAAII,eAAeJ,YAAa,IAAID,eAAjB,CAAnB;AACA,MAAIM,aAAaL,WAAWD,eAA5B;AACA,MAAIO,eAAeN,WAAWK,UAA9B;;AAEA,MAAIE,MAAM,EAAV;AAAA,MAAcC,OAAO,CAArB;AACA,OAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIb,MAAnB,EAA2Ba,GAA3B,EAA+B;AAC7BF,QAAIG,IAAJ,CAAS;AACPC,aAAOP,YADA;AAEPC,4BAFO,EAEKG,UAFL,EAEWF;AAFX,KAAT;AAIAE,YAAQR,QAAR;AACD;AACD,SAAOO,GAAP;AACD,CAnBM","file":"calculator.js","sourcesContent":["import {CROSS_WIDTH} from './constants'\r\n\r\n// totalWidth: the entire width of the top tab Panel\r\n// number: number of tabs\r\n// maxTabWidth: the maximum width of tab\r\n// wedge percentage: the ratio of wedege width to (tab w + wedge w)\r\nexport const calculate = (totalWidth, number, considersCrossButton = true, maxTabWidth = 150, wedgePercentage = 0.12) => {\r\n  let tabWidth = totalWidth / (number + wedgePercentage)\r\n  tabWidth = Math.min(maxTabWidth, tabWidth)\r\n  if(considersCrossButton){\r\n    tabWidth = Math.max(tabWidth, CROSS_WIDTH)\r\n  }\r\n  let tabWidthFull = tabWidth * ( 1 + wedgePercentage )\r\n  let wedgeWidth = tabWidth * wedgePercentage\r\n  let contentWidth = tabWidth - wedgeWidth\r\n\r\n  let res = [], left = 0;\r\n  for(let i = 0; i < number; i++){\r\n    res.push({\r\n      width: tabWidthFull,\r\n      wedgeWidth, left, contentWidth\r\n    })\r\n    left += tabWidth\r\n  }\r\n  return res;\r\n}\r\n"]}