{"version":3,"sources":["../src/tab.js"],"names":["idGen","clamp","val","min","max","Error","Math","types","Tab","title","type","id","prototype","kill","normalize","TabDragState","e","tabPositions","tabs","tabIndex","cleanUpCallback","updateCallback","_startx","clientX","_tabStates","_rightmost","p","left","_tabStart","_tabWidth","width","wedgeWidth","_moveBuffer","currentGhostIdx","tabGhost","ghostHandle","_updatePos","updatePosition","bind","_endDrag","endDrag","_cleanUpCallback","_updateCallback","document","addEventListener","draggingPos","updateLeft","ghostLeft","newIdx","findIndex","t","_lock","console","log","removeEventListener","setGhost"],"mappings":"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","file":"tab.js","sourcesContent":["import {idGenerator} from './util'\r\n\r\nconst idGen = idGenerator();\r\n\r\nconst clamp = (val, min, max)=>{\r\n  if(min >= max) {\r\n    throw new Error('Min is larger than max', min, max)\r\n  }\r\n  return Math.min(max, Math.max(val, min))\r\n}\r\n\r\nconst types = ['normal', 'junk', 'ghostPlaceholder', 'ghostHandle', 'entering', 'exiting']\r\nexport const Tab = function(title, type='normal'){\r\n  this.id = idGen();\r\n  this.title = title;\r\n  this.type = type;\r\n}\r\n\r\nTab.prototype.kill = function(){\r\n  this.type = 'junk';\r\n}\r\nTab.prototype.normalize = function(){\r\n  this.type = 'normal';\r\n}\r\n\r\n\r\n//The functional wrapper for dragging tabs\r\n//Initializes with the first mouse down event, the tabStates and the tabs, and the tab index being dragged\r\nexport const TabDragState = function(e, tabPositions, tabs, tabIndex, cleanUpCallback, updateCallback){\r\n  this._startx = e.clientX\r\n  this._tabStates = tabPositions\r\n  // this._leftmost = tabPositions.max(p=>-p.left).left\r\n  this._rightmost = tabPositions.max(p=>p.left).left + 100\r\n  this._tabStart = tabPositions[tabIndex].left\r\n  this._tabWidth = tabPositions[0].width - tabPositions[0].wedgeWidth //minus the wedge\r\n  this._moveBuffer = 0.05 * this._tabWidth\r\n  this.currentGhostIdx = tabIndex\r\n\r\n  //ghost place holder\r\n  this.tabGhost = tabs[tabIndex]\r\n  this.tabGhost.type = 'ghostPlaceholder'\r\n\r\n  this.tabs = tabs      //the array of tabs containing the ghost placeholder. the states will mutate its order\r\n  this.ghostHandle = null\r\n\r\n  //document listeners:\r\n  this._updatePos = updatePosition.bind(this)\r\n  this._endDrag = endDrag.bind(this)\r\n  this._cleanUpCallback = cleanUpCallback\r\n  this._updateCallback = updateCallback\r\n  document.addEventListener('mousemove', this._updatePos)\r\n  document.addEventListener('mouseup', this._endDrag)\r\n  document.addEventListener('mouseleave', this._endDrag)\r\n}\r\n\r\n//Feed mouse drag event\r\n//Returns the ghost position\r\nconst updatePosition = function(e){\r\n  this.draggingPos = e.clientX;\r\n  //update the ghost handle\r\n  if(this.ghostHandle && this.ghostHandle.updateLeft){\r\n    let ghostLeft = clamp(this.draggingPos - this._startx + this._tabStart, 0, this._rightmost)\r\n    // console.log('Ghost Drag:', this._tabWidth, ghostLeft)\r\n    this.ghostHandle.updateLeft(ghostLeft)\r\n    //See if need to swap position of ghost placeholder\r\n    //Find the tab for which left <= ghostHandleLeft <= nextTabLeft\r\n    let newIdx = this._tabStates.findIndex(t=>t.left + this._moveBuffer - this._tabWidth / 2  < ghostLeft && ghostLeft< t.left + this._tabWidth / 2 - this._moveBuffer)\r\n    if(newIdx >= 0 && newIdx !== this.currentGhostIdx){\r\n      if(this._lock){\r\n        console.log('Unable to swap now. status is locked')\r\n        return this;\r\n      }\r\n      this._lock = true;\r\n      this._updateCallback(this.currentGhostIdx, newIdx, ()=>{\r\n        this.currentGhostIdx = newIdx;\r\n        this._lock = false;\r\n      })\r\n    }\r\n  }\r\n  return this;\r\n}\r\n\r\n//Feed mouse up event\r\nconst endDrag = function(e){\r\n  //Restore the ghost placeholder to be rendered normally again\r\n  this.tabGhost.type = 'normal'\r\n  //Clean up the listener\r\n  document.removeEventListener('mousemove', this._updatePos)\r\n  document.removeEventListener('mouseup', this._endDrag)\r\n  document.removeEventListener('mouseleave', this._endDrag)\r\n  this._cleanUpCallback()\r\n  return this;\r\n}\r\n\r\nTabDragState.prototype.setGhost = function(ghostHandle){\r\n  this.ghostHandle = ghostHandle\r\n}\r\n"]}