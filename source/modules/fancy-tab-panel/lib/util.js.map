{"version":3,"sources":["../src/util.js"],"names":["postpone","func","graceTime","timer","clearTimeout","setTimeout","arrayToMap","arr","keyProvider","res","Array","Error","forEach","item","idGenerator","counter","prototype","max","f","idx","i","length"],"mappings":";;;;;AACO,IAAMA,8BAAW,SAAXA,QAAW,CAACC,IAAD,EAAwB;AAAA,MAAjBC,SAAiB,uEAAP,IAAO;;AAC9C,MAAIC,cAAJ;AACA,SAAO,YAAI;AACT,QAAGA,KAAH,EAAS;AACPC,mBAAaD,KAAb;AACD;AACD,QAAIA,QAAQE,WAAW;AAAA,aAAIJ,MAAJ;AAAA,KAAX,EAAuBC,SAAvB,CAAZ;AACD,GALD;AAMD,CARM;;AAUA,IAAMI,kCAAa,SAAbA,UAAa,CAACC,GAAD,EAAMC,WAAN,EAAsB;AAC9C,MAAIC,MAAM,EAAV;AACA,MAAG,CAACF,GAAD,IAAQ,EAAEA,eAAeG,KAAjB,CAAX,EAAmC;AACjC,UAAM,IAAIC,KAAJ,CAAU,sBAAV,EAAkCJ,GAAlC,CAAN;AACD;AACD,MAAG,CAACC,WAAD,IAAgB,EAAE,OAAOA,WAAP,KAAuB,UAAzB,CAAnB,EAAwD;AACtD,UAAM,IAAIG,KAAJ,CAAU,yBAAV,EAAqCH,WAArC,CAAN;AACD;AACDD,MAAIK,OAAJ,CAAY;AAAA,WAAMH,IAAID,YAAYK,IAAZ,CAAJ,IAAyBA,IAA/B;AAAA,GAAZ;AACA,SAAOJ,GAAP;AACD,CAVM;;AAYA,IAAMK,oCAAc,SAAdA,WAAc,GAAU;AACnC,MAAIC,UAAU,CAAd;AACA,SAAO,YAAU;AACfA;AACA,WAAOA,OAAP;AACD,GAHD;AAID,CANM;;AAUPL,MAAMM,SAAN,CAAgBC,GAAhB,GAAsB,UAASC,CAAT,EAAW;AAC/B,MAAIC,MAAM,CAAV;AAAA,MAAaF,MAAMC,IAAGA,EAAE,KAAK,CAAL,CAAF,CAAH,GAAgB,KAAK,CAAL,CAAnC;AACA,OAAI,IAAIE,IAAI,CAAZ,EAAeA,IAAI,KAAKC,MAAxB,EAAgCD,GAAhC,EAAoC;AAClC,QAAIP,OAAOK,IAAGA,EAAE,KAAKE,CAAL,CAAF,CAAH,GAAgB,KAAKA,CAAL,CAA3B;AACA,QAAGP,OAAOI,GAAV,EAAc;AACZE,YAAMC,CAAN;AACAH,YAAMJ,IAAN;AACD;AACF;AACD,SAAO,KAAKM,GAAL,CAAP;AACD,CAVD","file":"util.js","sourcesContent":["//NOTE: func should be parameter-less.\r\nexport const postpone = (func, graceTime=1000)=>{\r\n  let timer;\r\n  return ()=>{\r\n    if(timer){\r\n      clearTimeout(timer)\r\n    }\r\n    let timer = setTimeout(()=>func(), graceTime)\r\n  }\r\n}\r\n\r\nexport const arrayToMap = (arr, keyProvider) => {\r\n  let res = {}\r\n  if(!arr || !(arr instanceof Array)){\r\n    throw new Error('Received non array: ', arr)\r\n  }\r\n  if(!keyProvider || !(typeof keyProvider === 'function')){\r\n    throw new Error('Received non function: ', keyProvider)\r\n  }\r\n  arr.forEach(item=>res[keyProvider(item)] = item)\r\n  return res;\r\n}\r\n\r\nexport const idGenerator = function(){\r\n  let counter = 0;\r\n  return function(){\r\n    counter++;\r\n    return counter;\r\n  }\r\n}\r\n\r\n\r\n//Extend Array Prototype\r\nArray.prototype.max = function(f){\r\n  let idx = 0, max = f? f(this[0]) : this[0]\r\n  for(let i = 1; i < this.length; i++){\r\n    let item = f? f(this[i]) : this[i]\r\n    if(item > max){\r\n      idx = i;\r\n      max = item\r\n    }\r\n  }\r\n  return this[idx]\r\n}\r\n"]}