$basespeed: 1s;
$delay-1: - $basespeed;
$delay-2: - 2 * $basespeed;
$rotate-speed: 3 * $basespeed;
$precession-speed: 7 * $basespeed;
$outer-speed: 1.8 * $basespeed;

$ring-color-1: red;
$ring-color-2: red;
$ring-color-3: red;

$meteor-color-1: blue;
$meteor-color-2: blue;
$meteor-color-3: blue;

.hexagram {
  position: relative;
  height: 120px;

  svg {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    perspective: 300px;

    g *{
      transform-origin: center;
      transform-style: preserve-3d;
      fill: transparent;
      stroke-width: 0.5px;
    }

    &.circles{
      g:nth-of-type(1) circle{
        stroke: $ring-color-1;
        animation: rotate-1 infinite linear $rotate-speed;
        animation-delay: - $rotate-speed / 3;
      }
      g:nth-of-type(2) circle{
        stroke: $ring-color-2;
        animation: rotate-2 infinite linear $rotate-speed;
        animation-delay: - $rotate-speed * 2 / 3;
      }
      g:nth-of-type(3) circle{
        stroke: $ring-color-3;
        animation: rotate-3 infinite linear $rotate-speed;
      }
    }

    &.meteor{
      transform-origin: center;

      &.meteor-1{
        animation: rotate-3 infinite linear $precession-speed;
        animation-delay: - $precession-speed / 3;

        g circle {
          stroke: $meteor-color-1;
          clip-path: polygon(0% 0%, 10% 0%, 50% 50%, 0% 10%);
          animation: rotate-4 infinite linear $outer-speed;
        }
      }
      &.meteor-2{
        animation: rotate-1 infinite linear $precession-speed;
        animation-delay: - $precession-speed * 2 / 3;

        g circle {
          stroke: $meteor-color-2;
          clip-path: polygon(0% 0%, 10% 0%, 50% 50%, 0% 10%);
          animation: rotate-4 infinite linear reverse $outer-speed;
          animation-delay: - $outer-speed / 3;
        }
      }
      &.meteor-3{
        animation: rotate-2 infinite linear $precession-speed;

        g circle {
          stroke: $meteor-color-3;
          clip-path: polygon(0% 0%, 10% 0%, 50% 50%, 0% 10%);
          animation: rotate-4 infinite linear $outer-speed;
          animation-delay: - 2 * $outer-speed / 3;
        }
      }
    }

  }
}

$rot-v: (1, 0, 0), (1, 1, 0), (1, 1, 1), (0, 0, 1);

@each $v in $rot-v {
  $i: index($rot-v, $v);
  @keyframes rotate-#{$i} {
    0% {
      transform: rotate3d(nth($v, 1), nth($v, 2), nth($v, 3), 0deg);
    }
    100% {
      transform: rotate3d(nth($v, 1), nth($v, 2), nth($v, 3), 360deg);
    }
  }
}

// @keyframes rotate-3 {
//   0% {
//     transform: rotate3d(1, 0, 0, 0deg);
//   }
//   100% {
//     transform: rotate3d(1, 0, 0, 360deg);
//   }
// }
// @keyframes rotate-2 {
//   0% {
//     transform: rotate3d(1, 1, 0, 0deg);
//   }
//   100% {
//     transform: rotate3d(1, 1, 0, 360deg);
//   }
// }
// @keyframes rotate-1 {
//   0% {
//     transform: rotate3d(1, 1, 1, 0deg);
//   }
//   100% {
//     transform: rotate3d(1, 1, 1, 360deg);
//   }
// }
